<template>
  <div class="m-container m-view--list">
    <ActionBlock>
      <template v-slot:normal>
      <i-button type="primary" @click="showAddModal">创建</i-button>
      </template>
<% if (filterKeywordKey) { -%>
      <template v-slot:search>
        <Search v-model="filterData.<%= filterKeywordKey %>" style="width: 200px;" @on-search="onSearch"></Search>
      </template>
<% } -%>
    </ActionBlock>
    <div>
    </div>
    <div>
      <i-table
        class="no-outside-border"
        stripe
        :columns="columns"
        :data="tableData"
        no-data-text="暂无数据，请先创建"
      />
    </div>
    <!--分页-->
    <div class="m-page">
      <Page
        class="f-fr"
        size="small"
        :current="pageInfo.page"
        :page-size="pageInfo.pageSize"
        :total="pageInfo.total"
        @on-change="onPageChange"
        show-total
      ></Page>
    </div>
    <!--表单弹框-->
    <FormModal
      v-model="modals.basicForm"
      :formType="modals.basicFormType"
      :data="currentRow"
      @on-submited="getTableData"
    ></FormModal>
  </div>
</template>

<script>

<% if (development) { -%>
import response from '../config/api-get-list.json';
<% } -%>
<% if (!development) { -%>
import { get<%= pageNameUpper %>List } from '@/api/<%= pageNameLower %>';
<% } -%>
import FormModal from './components/form-modal.vue';
import ActionBlock from '@vue-materials-iview/action-block';
<% if (filterKeywordKey) { -%>
import Search from '@vue-materials-iview/search';
<% } -%>

export default {
  components: {
    FormModal,
    ActionBlock,
<% if (filterKeywordKey) { -%>
    Search,
<% } -%>
  },
  props: {},
  data() {
    return {
      tableData: [],
      /*过滤*/
      filterData: {
<% if (filterKeywordKey) { -%>
        <%= filterKeywordKey %>: '',
<% } -%>
      },
      /* 分页信息 */
      pageInfo: {
        page: 1,
        pageSize: 20,
        total: 0,
      },
      modals: {
        basicForm: false,
        basicFormType: 'add',
      },
      currentRow: {},
      // 表格结构
      columns: [
        {type: 'index',width: 50},
        <% dataSchema.forEach(function(data){-%>
        {title: '<%=data.title%>',key: '<%=data.field%>'},
        <%})-%>
        {
          title: '操作',
          key: 'action',
          width: 150,
          render: (h, { row }) => (
            <div class="table_action">
              <span
                class="clickable--primary"
                onClick={() => {
                  this.showEditRow(row);
                }}
              >
                编辑
              </span>
              <span
                class="clickable--error"
                onClick={() => {
                  this.confirmDeleteRow(row);
                }}
              >
                删除
              </span>
            </div>
          ),
        },
      ],
    };
  },
  computed: {},
  watch: {},
  created() {
    this.getTableData();
  },
  mounted() {},
  methods: {
    /**
     * 获取表格数据
     */
    getTableData() {
<% if (development) { -%>
      this.tableData = response.data;
<% } -%>
<% if (!development) { -%>
      get<%= pageNameUpper %>List({
        projectId: this.$projectId,
<% if (filterKeywordKey) { -%>
        <%= filterKeywordKey %>: this.filterData.<%= filterKeywordKey %>,
<% } -%>
        page: this.pageInfo.page,
        pageSize: this.pageInfo.pageSize,
      }).then(response => {
        this.tableData = response.data.items || [];
        // 更新分页信息
        this.pageInfo.total = response.data.pageInfo.total;
        this.pageInfo.page = response.data.pageInfo.page;
      });
<% } -%>
    },
    /**
     * 切换页面
     * @param {Number} page  当前选中页
     */
    onPageChange(page) {
      this.pageInfo.page = page;
      this.getTableData();
    },
    /**
     * 搜索
     */
    onSearch() {
      this.pageInfo.page = 1;
      this.getTableData();
    },
    /**
     * 显示新建弹框
     */
    showAddModal() {
      this.modals.basicFormType = 'add';
      this.modals.basicForm = true;
    },
    /**
     * 显示编辑弹框
     */
    showEditRow(row) {
      this.currentRow = row;
      this.modals.basicFormType = 'edit';
      this.modals.basicForm = true;
    },
    /**
     * 删除二次确认弹框
     */
    confirmDeleteRow({ id }) {
      this.$Modal.confirm({
        title: '删除',
        content: '确定删除此数据吗？',
        okType: 'error',
        onOk: () => {
          this.deleteRow({ id });
        },
      });
    },
    /**
     * 删除
     */
    deleteRow() {
      // 删除接口
      this.getTableData();
      this.$Message.success('删除成功');
    },
  },
};
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped></style>
